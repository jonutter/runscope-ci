exit
res
exit
exi
tests.first.test_run_url
tests.first.url
tests.first
tests
res
tests
exit
result
exit
res.
res
exit
res
exit
response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }.last
response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }.first
response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }.first.test_run_id
response_data
exit
response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }
response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }.first.test_run_id
exit
res.first.test_run_id
res.first
res = response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }
response_data["data"]["runs"].collect { |run| RunscopeCi::RsTest.new(run) }
first.test_run_id
first = response_data["data"]["runs"].first
exit
response_data
response_data.first
response_data.class
exit
response_data
      #expect(extract_tests(trigger_bucket_data)).to be_a_kind_of(Array)
res_arry.count
res_arry
res_arry = response_data["data"]["runs"]
response_data["data"]["runs"]
response_data["data"]["runs"].class
response_data
response_data.inspect
response_data.class
continue
response_data["data"]["runs"].class
response_data["data"]["runs"]
response_data["data"][:runs]
response_data["data"]
response_data[:data]
response_data
